buildscript {
    apply from: "../app/dependencies.gradle"
}
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin' // also to support Java, remove '.kotlin' part.
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("Certificates/keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "com.example.mvvmstarterapp"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.version_code
        versionName versions.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storePassword keystoreProperties['storePassword']
            storeFile file('../Certificates/defaultKeystore.jks')
        }
    }

    buildTypes {
        debug {
            resValue "string", "app_name", "MvvmTestApp"
            buildConfigField "String", "BASE_URL", '"https://jsonplaceholder.typicode.com"'
            minifyEnabled false
            applicationIdSuffix '.debug'
        }
        release {
            resValue "string", "app_name", "MvvmStarterApp"
            buildConfigField "String", "BASE_URL", '"https://jsonplaceholder.typicode.com"'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "${variant.applicationId}-${variant.versionName}.apk"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

kapt {
    // Dagger Hilt
    correctErrorTypes true
}

dependencies {
    implementation "androidx.core:core-ktx:$versions.ktx"
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "com.google.android.material:material:$versions.material"

    // Views
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swiperefresh"

    // Lifecycle + ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"

    // Fragment
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    // Hilt
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"

    // Datastore
    implementation "androidx.datastore:datastore-preferences:$versions.dataStore"

    // Browser CustomTabs
    implementation "androidx.browser:browser:$versions.browser"

    // 3rd Dependencies
    // Glide
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"

    // OkHttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:$versions.okhttp"))
    implementation("com.squareup.okhttp3:logging-interceptor")

    // Local Unit Tests
    testImplementation "com.google.truth:truth:$versions.truth"
    testImplementation "junit:junit:$versions.junit"

    // Instrument Unit Test
    androidTestImplementation "com.google.truth:truth:$versions.truth"
    androidTestImplementation "androidx.test.ext:junit:$versions.testExtJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.testEspresso"
}